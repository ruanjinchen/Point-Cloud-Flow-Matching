ninja_required_version = 1.3
cxx = /usr/bin/g++
nvcc = /root/miniconda3/envs/flow/bin/nvcc

cflags = -DTORCH_EXTENSION_NAME=emd_ext -DTORCH_API_INCLUDE_EXTENSION_H -I/root/autodl-tmp/Point-Cloud-Flow-Matching/third_party/PyTorchEMD/cuda -isystem /root/miniconda3/envs/flow/lib/python3.12/site-packages/torch/include -isystem /root/miniconda3/envs/flow/lib/python3.12/site-packages/torch/include/torch/csrc/api/include -isystem /root/miniconda3/envs/flow/include -isystem /root/miniconda3/envs/flow/include/python3.12 -fPIC -std=c++17 -O3 -std=c++17
post_cflags = 
cuda_cflags = -ccbin /root/miniconda3/envs/flow/bin/x86_64-conda-linux-gnu-cc -DTORCH_EXTENSION_NAME=emd_ext -DTORCH_API_INCLUDE_EXTENSION_H -I/root/autodl-tmp/Point-Cloud-Flow-Matching/third_party/PyTorchEMD/cuda -isystem /root/miniconda3/envs/flow/lib/python3.12/site-packages/torch/include -isystem /root/miniconda3/envs/flow/lib/python3.12/site-packages/torch/include/torch/csrc/api/include -isystem /root/miniconda3/envs/flow/include -isystem /root/miniconda3/envs/flow/include/python3.12 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_120,code=sm_120 -gencode=arch=compute_80,code=sm_80 -gencode=arch=compute_89,code=sm_89 -gencode=arch=compute_90,code=sm_90 --compiler-options '-fPIC' -O3 --use_fast_math -std=c++17 -U__CUDA_NO_HALF_OPERATORS__ -U__CUDA_NO_HALF_CONVERSIONS__ --expt-relaxed-constexpr --expt-extended-lambda
cuda_post_cflags = 
cuda_dlink_post_cflags = 
sycl_dlink_post_cflags = 
ldflags = -shared -L/root/miniconda3/envs/flow/lib/python3.12/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/root/miniconda3/envs/flow/lib -lcudart

rule compile
  command = $cxx -MMD -MF $out.d $cflags -c $in -o $out $post_cflags
  depfile = $out.d
  deps = gcc

rule cuda_compile
  depfile = $out.d
  deps = gcc
  command = $nvcc --generate-dependencies-with-compile --dependency-output $out.d $cuda_cflags -c $in -o $out $cuda_post_cflags





rule link
  command = $cxx $in $ldflags -o $out

build emd.o: compile /root/autodl-tmp/Point-Cloud-Flow-Matching/third_party/PyTorchEMD/cuda/emd.cpp
build emd_kernel.cuda.o: cuda_compile /root/autodl-tmp/Point-Cloud-Flow-Matching/third_party/PyTorchEMD/cuda/emd_kernel.cu





build emd_ext.so: link emd.o emd_kernel.cuda.o

default emd_ext.so
